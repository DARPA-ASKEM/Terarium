---
# Automatically build and publish the client to the container registry.
# This workflow is triggered on changes to the client directory.

name: Build and Publish hmi-client

# yamllint disable-line rule:truthy
on:
  push:
    # paths: ['packages/client/**']
    branches: [ 'use-mac-os-to-build-arm-images', 'main' ]
    tags: [ '*' ]

jobs:
  image-name:
    name: Create the name of the Image
    runs-on: ubuntu-22.04
    outputs:
      name: ${{ steps.define.outputs.name }}
    steps:
      - id: define
        run: |
          if [[ '${{ github.ref_type }}' == 'branch' && '${{ github.ref_name }}' == 'main' ]]; then
            TAG=latest
          else
            SEMVER=$( echo ${{ github.ref_name }} | sed -nre 's/^v[^0-9]*(([0-9]+\.)*[0-9]+(-[a-z]+)?).*/\1/p')
            if [[ -n $SEMVER ]]; then
              TAG=${SEMVER}
            else
              TAG=${{ github.ref_name }}
            fi
          fi
          TAG=test-to-be-deleted

          IMAGE=ghcr.io/darpa-askem/hmi-client:${TAG,,}
          echo "$IMAGE"
          echo "name=$IMAGE" >> $GITHUB_OUTPUT

  amd64:
    runs-on: ubuntu-22.04
    needs: image-name
    permissions:
      contents: read
      packages: write
    steps:
      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node 20.10.0 LTS
        uses: actions/setup-node@v4
        with:
          node-version: 20.10.0

      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Build image using Makefile
        run: make image-hmi-client

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: packages/client/hmi-client/docker
          platforms: linux/amd64
          push: true
          tags: ${{ needs.image-name.outputs.name }}--amd64

  arm64-macos:
    if: false
    # Disabled until macOS GitHub runners uses M2 that can do nested virtualization
    # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners#limitations-for-arm64-macos-runners
    runs-on: macos-14
    needs: image-name
    permissions:
      contents: read
      packages: write
    steps:
      - name: Setup Docker on macOS
        uses: douglascamata/setup-docker-macos-action@v1-alpha

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Build image using Makefile
        run: make image-hmi-client

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: packages/client/hmi-client/docker
          platforms: linux/arm64
          push: true
          tags: ${{ needs.image-name.outputs.name }}--arm64

  arm64-emulation:
    runs-on: ubuntu-22.04
    needs: image-name
    permissions:
      contents: read
      packages: write
    steps:
      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Node 20.10.0 LTS
        uses: actions/setup-node@v4
        with:
          node-version: 20.10.0

      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Build image using Makefile
        run: make image-hmi-client

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: packages/client/hmi-client/docker
          platforms: linux/arm64
          push: true
          tags: ${{ needs.image-name.outputs.name }}--arm64

  merge-images:
    name: Merge images into one multi-arch manifest
    runs-on: ubuntu-22.04
    needs:
      - image-name
      - amd64
      # - arm64-macos
      - arm64-emulation
    steps:
      - name: Create, inspect and publish manifest
        run: |
          docker manifest create ${{ needs.image-name.outputs.name }} \
            --amend ${{ needs.image-name.outputs.name }}--amd64 \
            --amend ${{ needs.image-name.outputs.name }}--arm64
          docker manifest annotate --arch amd64 --os linux ${{ needs.image-name.outputs.name }} ${{ needs.image-name.outputs.name }}--amd64
          docker manifest annotate --arch arm64 --os linux ${{ needs.image-name.outputs.name }} ${{ needs.image-name.outputs.name }}--arm64
          docker manifest inspect ${{ needs.image-name.outputs.name }}
          docker manifest push ${{ needs.image-name.outputs.name }}

---
name: Pull Request Checklist

# yamllint disable-line rule:truthy
on:
  pull_request:
    branches:
      - main
  issue_comment:
    types:
      - edited

jobs:
  comment:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            // Checklist
            const commentBody = "Please review the checklist below \n\n- [ ] _manual test_ and/or _scenario test_ updated, if not sure ask #askem-testing\n- [ ] _documentation_ updated\n- [ ] _breaking change_ notify #askem-engineering";
            const approvedBody = "All checklist items are checked. Approving the pull request.";

            // Get the existing comments.
            const {data: comments} = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.number,
            })
            console.log(comments);

            // Find any comment already made by the bot.
            const botComment = comments.find(comment => comment.user.id === 41898282)

            if (botComment) {
              const body = botComment.body;
              const checklistRegex = /- \[ \]/g;
              const uncheckedItems = body.match(checklistRegex);
              console.log(body, uncheckedItems);

              if (!uncheckedItems) {
                // All checklist items are checked, approve the pull request
                await github.rest.pulls.createReview({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: context.payload.number,
                  event: 'APPROVE',
                  body: 'All checklist items are checked',
                });
                await github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: botComment.id,
                  body: botComment.body + "\n\n" + approvedBody,
                })
              }
            } else {
              // Create a new comment.
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.number,
                body: commentBody,
              })
            }

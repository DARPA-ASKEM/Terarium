map $http_upgrade $connection_upgrade {
  default upgrade;
''
  close;
}

log_format combined_no_query '$remote_addr - $http_x_forwarded_for - $remote_user [$time_local] '
'"$uri" $status $body_bytes_sent '
'"$http_referer" "$http_user_agent"';

include upstream.conf;

server_tokens off;

gzip on;
gzip_types text/plain text/css text/javascript application/javascript application/x-javascript application/json;
gzip_min_length 1000;
gzip_disable msie6;

server {
  listen 80;
  server_name _;

  # max file size. Should be kept in sync with the value in application.properties
  client_max_body_size 100M;

  access_log /var/log/nginx/access.log combined_no_query;
  add_header X-Frame-Options SAMEORIGIN;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  proxy_http_version 1.1;
  proxy_set_header Connection "";
  client_header_buffer_size 128k;
  large_client_header_buffers 4 128k;

  # redirect server error pages to the static page /50x.html
  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
    root   /usr/share/nginx/html;
  }

  location /healthcheck {
    return 200 "healthy";
  }

  root /var/www;

  location / {
    try_files $uri $uri/ /index.html;
    proxy_pass_request_headers on;
  }

  location = /index.html {
    add_header Cache-Control no-cache;
    add_header Cache-Control no-store;
    add_header Cache-Control must-revalidate;
    add_header Pragma no-cache;
    expires 0;
  }

  location ~^/api(.*) {
    proxy_pass http://api-upstream$1$is_args$args;
    include api-proxy.conf;
    include timeouts.conf;
    proxy_buffers 4 128k;
    proxy_buffer_size 128k;
  }

  location ~^/beaker(.*) {
    proxy_pass http://beaker-upstream$1$is_args$args;
    include api-proxy.conf;
    include timeouts.conf;
  }

  location ~^/beaker_ws(.*) {
    proxy_pass ws://beaker-upstream$1$is_args$args;
    include api-proxy.conf;
    include timeouts.conf;
  }
}

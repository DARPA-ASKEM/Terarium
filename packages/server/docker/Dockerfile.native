# Simple Dockerfile adding Gradle and GraalVM Native Image compiler to the standard
# https://github.com/orgs/graalvm/packages/container/package/graalvm-ce image
# NOTE: using OracleLinux 9 does not contain the appropriate GLIBC
FROM ghcr.io/graalvm/graalvm-ce:ol8-java17-22.3.1 as builder

WORKDIR /builder
COPY /modules/server .

RUN --mount=type=cache,target=/root/.gradle ./gradlew clean nativeCompile

# We use a Docker multi-stage build here in order that we only take the compiled native Spring Boot App from the first build container
# Using the ubi-micro image is missing some libraries
FROM quay.io/quarkus/quarkus-micro-image:2.0

# Add Spring Boot Native app spring-boot-graal to Container
COPY --from=builder "builder/build/native/nativeCompile/pantera" pantera

# Fire up our Spring Boot Native app by default
CMD [ "./pantera" ]

# ---- Alternative WIP
# # Simple Dockerfile adding Maven and GraalVM Native Image compiler to the standard
# # https://github.com/orgs/graalvm/packages/container/package/graalvm-ce image
# # NOTE: using OracleLinux 9 does not contain the appropriate GLIBC
# FROM ghcr.io/graalvm/graalvm-ce:ol8-java17-22.3.1 as builder

# WORKDIR /builder
# COPY /modules/server .

# # RUN gu install native-image;

# # RUN --mount=type=cache,target=/root/.gradle ./gradlew clean nativeCompile
# RUN native-image --static --initialize-at-build-time=PanteraApplication

# # We use a Docker multi-stage build here in order that we only take the compiled native Spring Boot App from the first build container
# FROM alpine:3.17.3
# # FROM registry.access.redhat.com/ubi8/ubi-minimal:8.5
# # FROM quay.io/quarkus/quarkus-micro-image:2.0
# # FROM registry.access.redhat.com/ubi8/ubi-micro:8.7-8

# # apk additional pieces
# # RUN apk update
# # RUN apk add libc6-compat
# # RUN apk add --upgrade libstdc++

# # Add Spring Boot Native app spring-boot-graal to Container
# COPY --from=builder "builder/build/native/nativeCompile/pantera" pantera

# # Fire up our Spring Boot Native app by default
# CMD [ "./pantera" ]

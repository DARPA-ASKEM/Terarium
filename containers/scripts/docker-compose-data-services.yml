---
version: "3.8"

services:
  data-service-migrations:
    image: ghcr.io/darpa-askem/data-service:latest
    command: ['/api/migrations/run_migrations.sh']
    networks:
      - terarium
    entrypoint: /run_migrations.sh
    environment:
      DATASET_STORAGE_BASE_URL: "s3://datasets/"
      STORAGE_HOST: "http://${local_host_name}:4566"
      S3_BUCKET: "askem"
      S3_DATASET_PATH: "datasets"
      S3_RESULT_PATH: "simulations"
      OPENAI_KEY: "sk"
      SQL_URL: "postgres"
      SQL_PORT: "5432"
      SQL_USER: "terarium_user"
      SQL_PASSWORD: "terarium"
      SQL_DB: "askem"
      NEO4J_ENABLED: "true"
      NEO4J_driver: "neo4j://${local_host_name}:7687"
      AWS_ACCESS_KEY_ID: "miniouser"
      AWS_SECRET_ACCESS_KEY: "miniopass"
      ES_INDEX_PREFIX: "tds_"
      ES_URL: "http://${local_host_name}:9200"
      ES_USERNAME: "tds"
      ES_PASSWORD: "tdsElasticPass"
      ELASTIC_PASSWORD: "tdsElasticPass"
      KIBANA_PASSWORD: "tdsKibanaPass"
      SEED_DATA: "true"
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      localstack:
        condition: service_started

  data-service:
    container_name: data-service
    image: ghcr.io/darpa-askem/data-service:latest
    networks:
      - terarium
    ports:
      - "3020:8000"
    environment:
      DATASET_STORAGE_BASE_URL: "s3://datasets/"
      STORAGE_HOST: "http://localstack:4566"
      S3_BUCKET: "askem"
      S3_DATASET_PATH: "datasets"
      S3_RESULT_PATH: "simulations"
      OPENAI_KEY: "sk"
      SQL_URL: "postgres"
      SQL_PORT: "5432"
      SQL_USER: "terarium_user"
      SQL_PASSWORD: "terarium"
      SQL_DB: "askem"
      NEO4J_ENABLED: "true"
      NEO4J_driver: "neo4j://neo4j:7687"
      AWS_ACCESS_KEY_ID: "miniouser"
      AWS_SECRET_ACCESS_KEY: "miniopass"
      ES_URL: "http://elasticsearch:9200"
      ELASTIC_PASSWORD: "tdsElasticPass"
      KIBANA_PASSWORD: "tdsKibanaPass"
    depends_on:
      data-service-migrations:
        condition: service_completed_successfully
      neo4j:
        condition: service_started
      localstack:
        condition: service_started

  beaker:
    container_name: beaker
    image: ghcr.io/darpa-askem/beaker-kernel:latest
    networks:
      - terarium
    ports:
      - "3050:8888"
    environment:
      DATA_SERVICE_URL: "http://${local_host_name}:3020"
      JUPYTER_SERVER: "http://${local_host_name}:3050"
      SIMULATION_SCHEDULER_URL: "http://${local_host_name}:3030"
      JUPYTER_TOKEN: "89f73481102c46c0bc13b2998f9a4fce"

  knowledge-middleware-api:
    container_name: knowledge-middleware-api
    image: ghcr.io/darpa-askem/knowledge-middleware-api:latest
    networks:
      - terarium
    ports:
      - "3060:8000"
    environment:
      TDS_URL: "http://${local_host_name}:3020"
      SKEMA_RS_URL: "https://skema-rs.staging.terarium.ai"
      SKEMA_TR_URL: "https://skema-tr.staging.terarium.ai"
      MIT_TR_URL: "https://mit-tr.staging.terarium.ai"
      TA1_UNIFIED_URL: "https://skema-unified.staging.terarium.ai"
      OPENAI_API_KEY: "${secret_mit_openai_key}"

  knowledge-middleware-worker:
    container_name: knowledge-middleware-worker
    image: ghcr.io/darpa-askem/knowledge-middleware-worker:latest
    networks:
      - terarium
    environment:
      TDS_URL: "http://${local_host_name}:3020"
      SKEMA_RS_URL: "https://skema-rs.staging.terarium.ai"
      SKEMA_TR_URL: "https://skema-tr.staging.terarium.ai"
      MIT_TR_URL: "https://mit-tr.staging.terarium.ai"
      TA1_UNIFIED_URL: "https://skema-unified.staging.terarium.ai"
      OPENAI_API_KEY: "${secret_mit_openai_key}"

---
version: '3.8'

services:
  postgres:
    container_name: postgres
    image: postgres:14-alpine
    networks:
      - terarium
    ports:
      - '5433:5432'
    restart: always
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready', '-d', 'pantera' ]
      interval: '3s'
      timeout: '3s'
      retries: 30
    user: postgres
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'postgres'
    volumes:
      - terarium-db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  data-service-migrations:
    image: ghcr.io/darpa-askem/data-service-migrations:latest
    networks:
      - terarium
    entrypoint: /run_migrations.sh
    environment:
      DATASET_STORAGE_BASE_URL: s3://datasets/
      STORAGE_HOST: 'http://${local_host_name}:4566'
      S3_BUCKET: askem
      S3_DATASET_PATH: datasets
      S3_RESULT_PATH: simulations
      OPENAI_KEY: sk
      SQL_URL: postgres
      SQL_PORT: 5432
      SQL_USER: terarium_user
      SQL_PASSWORD: terarium
      SQL_DB: askem
      NEO4J_ENABLED: true
      NEO4J_driver: 'neo4j://${local_host_name}:7687'
      AWS_ACCESS_KEY_ID: miniouser
      AWS_SECRET_ACCESS_KEY: miniopass
      ES_INDEX_PREFIX: tds_
      ES_URL: 'http://${local_host_name}:9200'
      ES_USERNAME: tds
      ES_PASSWORD: tdsElasticPass
      ELASTIC_PASSWORD: tdsElasticPass
      KIBANA_PASSWORD: tdsKibanaPass
      SEED_DATA: true
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      localstack:
        condition: service_started

  data-service:
    container_name: data-service
    image: ghcr.io/darpa-askem/data-service:latest
    networks:
      - terarium
    ports:
      - "3020:8000"
    environment:
      DATASET_STORAGE_BASE_URL: s3://datasets/
      STORAGE_HOST: 'http://${local_host_name}:4566'
      S3_BUCKET: askem
      S3_DATASET_PATH: datasets
      S3_RESULT_PATH: simulations
      OPENAI_KEY: sk
      SQL_URL: postgres
      SQL_PORT: 5432
      SQL_USER: terarium_user
      SQL_PASSWORD: terarium
      SQL_DB: askem
      NEO4J_ENABLED: true
      NEO4J_driver: 'neo4j://${local_host_name}:7687'
      AWS_ACCESS_KEY_ID: miniouser
      AWS_SECRET_ACCESS_KEY: miniopass
      ES_URL: 'http://${local_host_name}:9200'
      ELASTIC_PASSWORD: tdsElasticPass
      KIBANA_PASSWORD: tdsKibanaPass
    depends_on:
      data-service-migrations:
        condition: service_completed_successfully
      neo4j:
        condition: service_started
      localstack:
        condition: service_started

  localstack:
    container_name: localstack
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
      - "8055:8080"
    networks:
      terarium:
      default:
        aliases:
          - s3.localhost.localstack.cloud
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - ./docker/localstack:/tmp/localstack
      - /var/run/docker.sock:/var/run/docker.sock

  neo4j:
    container_name: neo4j
    image: '${chipset}v8/neo4j:5.12-community'
    networks:
      - terarium
    expose:
      - 7474
      - 7687
    environment:
      - NEO4J_PLUGINS=["apoc"]
      - apoc.import.file.enabled=true
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_memory_pagecache_size=512M
      - PG_HOST=postgres
      - PG_PORT=5432
    depends_on:
      - postgres

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:8.7.0
    networks:
      - terarium
    ports:
      - '9200:9200'
      - '9300:9300'
    healthcheck:
      test: ['CMD', 'curl', '--head', '0.0.0.0:9200/_cluster/health?wait_for_status=yellow']
      interval: '3s'
      timeout: '3s'
      retries: 30
    environment:
      - cluster.name=elasticsearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./docker/elasticsearch-data:/usr/share/elasticsearch/data

volumes:
  minio-data:
    driver: local
  terarium-db:
    driver: local

networks:
  terarium:
    name: terarium
